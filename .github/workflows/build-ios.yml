name: Build for iOS

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-ios.yml'
      - '**/*.gradle.kts'
      - '**/*.properties'
      - 'gradle/**'
      - 'iosApp/src/commonMain/**'
      - 'iosApp/src/iosMain/**'
      - 'iosApp/**'

jobs:
  build:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v4

      - name: Job set up
        uses: ./.github/actions/job-set-up

      - name: Write local.properties
        shell: bash
        run: echo '${{ secrets.LOCAL_PROPERTIES }}' > local.properties

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Cache KMP tooling
        uses: actions/cache@v4
        with:
          path: |
            ~/.konan
          key: ${{ runner.os }}-v1-${{ hashFiles('*.versions.toml') }}

      - name: Import certs
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - name: Download provisioning profiles
        uses: apple-actions/download-provisioning-profiles@v3
        with:
          bundle-id: ${{ secrets.BUNDLE_ID }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Build archive
        run: |
          cd iosApp
          
          xcrun xcodebuild \
            -scheme "iosApp" \
            -configuration "Release" \
            -sdk "iphoneos" \
            -parallelizeTargets \
            -showBuildTimingSummary \
            -disableAutomaticPackageResolution \
            -derivedDataPath "${RUNNER_TEMP}/Build/DerivedData" \
            -archivePath "${RUNNER_TEMP}/Build/Archives/iosApp.xcarchive" \
            -resultBundlePath "${RUNNER_TEMP}/Build/Artifacts/iosApp.xcresult" \
            -destination "generic/platform=iOS" \
            DEVELOPMENT_TEAM="UQSVPP37UL" \
            PRODUCT_BUNDLE_IDENTIFIER="org.escalaralcoiaicomtat.app.EscalarAlcoiaiComtat" \
            CODE_SIGN_STYLE="Manual" \
            PROVISIONING_PROFILE_SPECIFIER="iOS App Store Connect Profile" \
            archive

      - name: "Generate ExportOptions.plist"
        run: |
          cat <<EOF > ${RUNNER_TEMP}/Build/ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>destination</key>
              <string>export</string>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>generateAppStoreInformation</key>
              <true/>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>teamID</key>
              <string>${{ secrets.APPSTORE_TEAM_ID }}</string>
              <key>uploadSymbols</key>
              <true/>
              <key>provisioningProfiles</key>
              <dict>
                <key>${{ secrets.BUNDLE_ID }}</key>
                <string>${{ secrets.DIST_PROVISIONING_PROFILE_NAME }}</string>
              </dict>
            </dict>
          </plist>
          EOF

      - id: export_archive
        name: export archive
        run: |
          xcrun xcodebuild \
            -exportArchive \
            -exportOptionsPlist "${RUNNER_TEMP}/Build/ExportOptions.plist" \
            -archivePath "${RUNNER_TEMP}/Build/Archives/iosApp.xcarchive" \
            -exportPath "${RUNNER_TEMP}/Build/Archives/iosApp.xcarchive" \
            PRODUCT_BUNDLE_IDENTIFIER="${{ secrets.BUNDLE_ID }}"
      
          echo "ipa_path=${RUNNER_TEMP}/Build/Archives/iosApp.xcarchive/iosApp.ipa" >> $GITHUB_ENV

      - uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ${{ env.ipa_path }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Upload built artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: iosApp/build/compose/binaries/main/**
